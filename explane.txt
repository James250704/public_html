# 歐印精品電商系統規格書 v1.1

## 1. 系統概觀 (System Overview)

### 1.1 目標 (Goal)
建立一個線上電子商務平台，專門銷售「歐印精品」的商品，提供商品展示、購物車、結帳、會員管理、訂單查詢及維修保固資訊等功能。

### 1.2 範圍 (Scope)
本系統包含前台使用者介面與後台管理邏輯（部分透過 API 體現）。主要功能涵蓋：
*   商品瀏覽與搜尋
*   會員註冊與登入
*   購物車管理
*   線上結帳流程
*   訂單歷史查詢
*   維修保固資訊展示

## 2. 系統架構 (System Architecture)

### 2.1 前端架構 (Frontend Architecture)
*   **框架:** 
    - 採用AJAX (AX)方式與後端交互
    - 使用jQuery進行DOM操作和AJAX請求
    - 基於MVC架構模式
*   **樣式:** 
    - Bootstrap 5.1.1 (提供響應式設計基礎)
    - 自訂CSS
*   **圖示:** Bootstrap Icons (透過SVG)
*   **導航:**
    *   桌面版：標準頂部導航欄 sticky-top
    *   手機版：Offcanvas 側邊滑出式選單

*   **主要頁面:** 單頁應用架構 (SPA)
    - 使用index.php作為入口點
    - 其他功能通過AJAX動態加載
    - 頁面切換由前端路由處理
    - 數據交互完全通過API

*   **交互方式:**
    *   所有數據交互通過AJAX請求後端API
    *   頁面渲染由前端JavaScript處理
    *   使用JSON格式進行數據交換
    *   採用前端路由管理視圖切換
*   **MVC架構:**
    *   Model: 處理數據邏輯，通過AJAX與後端API交互
    *   View: 負責頁面渲染，使用HTML/CSS/JavaScript
    *   Controller: 處理用戶交互，協調Model和View

### 2.2 後端架構 (Backend Architecture)
*   **語言:** PHP
*   **Session 管理:** 使用 PHP 原生 `$_SESSION` 進行使用者狀態管理
*   **API:** 
    * 透過 <mcfile name="APIs.php" path="/Applications/XAMPP/xamppfiles/htdocs/public_html/php/APIs.php"></mcfile> 提供核心業務邏輯函數
    * 使用AJAX技術實現前後端分離
    * 所有API響應返回JSON格式數據
*   **路由:** 
    * 傳統PHP文件路由 (e.g., `index.php`, `productDetail.php?product_id=X`)
    * AJAX專用路由 (透過`action`參數識別)

### 2.3 資料庫架構 (Database Architecture)
*   **系統:** MySQL **
*   **資料表:**
    *   `Member`: 儲存會員資訊 (MemberID, Name, Email, Password, Phone, City, Address, IsAdmin)
    *   `Product`: 儲存商品基本資訊 (ProductID, Type, ProductName, Introdution)
    *   `Options`: 儲存商品規格選項 (OptionID, ProductID, Color, Size, SizeDescription, Price, Stock)
    *   `CartItem`: 儲存購物車內容 (MemberID, OptionID, Quantity)
    *   `Orders`: 儲存訂單資訊 (OrderID, MembersID, OrderDate, Status)
    *   `OrderItem`: 儲存訂單資訊 (OrderID, OptionID, Quantity)
    *   `Receipt`: 訂單付款完成後產生收據 (ReceiptID, MemberID, OrderID, PaymentMethod, PaymentDate)
    *   `ReceiptItem`: 收據詳細內容 (ReceiptID, OptionID, WarrantyID)
    *   `Warranty`: 商品保固資訊(根據收據日期) (WarrantyID, WarrantyDate, WarrantyStatus) 
    *   `Repairs`: 儲存維修訂單 (RepairID, WarrantyID, RepairDate, RepairStatus)
*   **關聯:** 透過主鍵和外鍵建立資料表間的關聯 (e.g., `OrderItem.OrderID` -> `Orders.OrderID`, `Options.ProductID` -> `Product.ProductID`)

## 3. 功能模組 (Functional Modules)

### 3.1 使用者管理 (User Management)
*   **註冊 **
    *   提供表單讓使用者輸入姓名、Email、密碼、電話、地址等資訊。
    *   後端進行資料驗證 (Email 格式、密碼確認等)。
    *   成功後將資料寫入 `Member` 資料表。
    *   顯示成功或錯誤訊息。
*   **登入/登出 **
    *   提供表單讓使用者輸入 Phone 和密碼。
    *   後端驗證使用者身份。
    *   成功登入後設置 Session (`logged_in`, `user_id`, `role`)。
    *   導航欄顯示登入/登出按鈕及會員相關連結。
    *   登出時清除 Session。
*   **會員資訊顯示 **
    *   在「我的訂單」和「結帳」頁面顯示當前登入會員的基本資料 (姓名、角色、電話、Email、地址)。

### 3.2 商品瀏覽 (Product Browsing)
*   **首頁商品展示**
    *   包含輪播圖 (Carousel)。
    *   依商品類型 (Type: `accessories`, `travel`, `featured`, (`aluminum`, `zipper`)) 分區展示商品。
    *   顯示商品圖片、名稱、價格 (包含價格(Max Options.Price * 1.2)與特價(Min Options.Price))。
    *   點擊商品卡片可連結至商品詳情頁。
*   **商品詳情 **
    *   接收 `product_id` 參數。
    *   顯示商品名稱、商品主圖、商品說明、商品選項、商品詳細圖片。
    *   顯示可選規格 (顏色、尺寸) 及其對應價格。
    *   提供數量選擇器。+/- 按鈕或輸入框讓使用者修改商品數量
    *   提供「加入購物車」按鈕。
    *   若 `product_id` 無效或找不到商品，顯示 404 頁面。

### 3.3 購物車 **
*   **權限檢查:** 必須登入才能進入購物車，否則導向登入頁。(顯示alert在頁面正中間)
*   **新增商品:** 在商品詳情頁點擊「加入購物車」按鈕，將選擇的規格和數量加入 Session 或 `CartItem` 資料表。
*   **檢視購物車:**
    *   顯示購物車內所有商品項目。
    *   包含商品圖片、名稱、所選規格 (顏色/尺寸)、單價、數量、小計。
    *   區分桌面版 (表格) 和手機版 (卡片列表) 顯示樣式。
    *   計算並顯示商品總計金額。
*   **更新數量:** 提供 +/- 按鈕或輸入框讓使用者修改商品數量。
*   **移除商品:** 提供刪除按鈕移除購物車中的特定商品。
*   **結帳按鈕:** 提供連結至結帳頁面。

### 3.4 結帳流程 
*   **權限檢查:** 必須登入才能進入結帳頁面，否則導向登入頁。(顯示alert在頁面正中間)
*   **訂單明細:** 再次顯示購物車中的商品清單、規格、數量、單價、小計。
*   **會員資訊確認:** 顯示當前登入會員的姓名、電話、Email、送貨地址 (不可編輯)。
*   **訂單總計:** 顯示商品總金額。
*   **結帳按鈕:** 點擊後觸發後端結帳邏輯 
*   **訂單生成:**
    *   後端將購物車內容轉換為訂單，寫入 `Orders` 和 `OrderItem` 資料表，並將產品庫存減少。
    *   清空購物車。
    *   成功後導向「我的訂單」頁面並帶上新訂單 ID。
    *   若結帳失敗，顯示錯誤訊息。

### 3.5 訂單管理 **
*   **權限檢查:** 必須登入才能查看。
*   **會員資訊:** 顯示當前登入會員的基本資料。
*   **訂單列表:**
    *   依訂單狀態分頁籤顯示 ('待處理', '已確認', '已出貨', '已完成', '已取消')。
    *   顯示訂單號碼、訂單日期。
    *   顯示訂單內商品項目 (圖片、名稱、規格、數量、單價)。
    *   顯示訂單總金額。

### 3.6 維修保固
*   **資訊展示:**
    *   提供維修價格表和鑰匙價格表的連結 (圖片或文件)。
    *   使用圖片展示維修說明文字和維修流程圖。
    *   提供中英文內容切換 (Tab)。

### 3.7 靜態頁面 (Static Pages)
*   **品牌介紹 顯示品牌相關資訊。
*   **購物說明 提供購物流程、付款、運送等說明文字。
*   **關於我們 提供公司或團隊介紹。

### 3.8 導航系統 (<mcfile name="header.php" path="/Applications/XAMPP/xamppfiles/htdocs/public_html/header.php"></mcfile>)
*   **主導航:** 包含 Logo、主要頁面連結 (首頁、品牌介紹、購物說明、維修保固、關於我們)。
*   **功能連結:** 包含搜尋、會員中心/我的訂單 (登入後)、購物車、登入/登出按鈕。
*   **Offcanvas 導航:** 在小螢幕裝置上，將主導航和功能連結整合至側邊滑出選單。

### 3.9 錯誤處理
*   **404 頁面 當使用者訪問不存在的頁面或資源 (如無效的商品 ID) 時顯示。

## 4. 資料庫設計 (Database Design)
(詳見 <mcfile name="D1256977.sql" path="/Applications/XAMPP/xamppfiles/htdocs/public_html/D1256977.sql"></mcfile> 文件)
*   **核心資料表:** `Member`, `Product`, `Options`, `Orders`, `OrderItem`, `Cart`, `CartItem`。
*   **輔助資料表:** `Receipt`, `ReceiptItem`, `Warranty`, `Repairs`。
*   **主要關聯:**
    *   `Orders.MembersID` -> `Member.MemberID`
    *   `OrderItem.OrderID` -> `Orders.OrderID`
    *   `OrderItem.OptionID` -> `Options.OptionID`
    *   `Options.ProductID` -> `Product.ProductID`
    *   `CartItem.MemberID` -> `Member.MemberID` (或 `Cart.MemberID`)
    *   `CartItem.OptionID` -> `Options.OptionID`

## 5. 非功能性需求 (Non-Functional Requirements)

*   **響應式設計:** 網頁需在不同尺寸的裝置 (桌面、平板、手機) 上皆有良好的顯示效果和可用性。
*   **安全性:**
    *   使用 Session 管理使用者登入狀態。
    *   對使用者輸入進行適當的處理 (e.g., `htmlspecialchars`) 防止 XSS 攻擊。
    *   密碼應進行加密儲存 (php password-hash)。
    *   對需要登入的頁面進行權限檢查。
*   **可用性:** 介面直觀易用，購物流程順暢。

### 6.樣式參考

*   https://templatemo.com/tm-577-liberty-market
*   https://www.all-en.com.tw/
